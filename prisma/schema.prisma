// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  imageUrl  String?
  order     Order[]
  product   Product[]
  cart      Cart?
  wishlist  Wishlist?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  price       Float
  image       Image[]
  description String?
  stockLevel  Int
  order       Order[]
  seller      User       @relation(fields: [sellerId], references: [id])
  sellerId    String
  wishlist    Wishlist[]
  cart        Cart[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Image {
  id        String  @id @default(uuid())
  imageUrl  String
  imageName String
  productId Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Order {
  id         String    @id @default(uuid())
  customer   User      @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId String
  product    Product[]
}

model Wishlist {
  id      String    @id @default(uuid())
  userId  String    @unique
  user    User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  product Product[]
}

model Cart{
  id      String    @id @default(uuid())
  userId  String    @unique
  user    User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  product Product[]
}